#include<bits/stdc++.h>
using namespace std;

int main()
{
    int arr[3][3] = {{1, 3, 3},
                   {2, 1, 4},
                  {0, 6, 4}};
    int n =3;

//  since from last row we cannot move further so we start diging from last row and come to first column  each column row can be 0->n-1 or n-1->0

    int dp[n][n];

    for(int j=n-1;j>=0;j--)
    {
        for(int i = n-1;i>=0;i--)
        {
            if(j == n-1)
            {
                dp[i][j] = arr[i][j];
            }
            else if(i == 0)
            {
                dp[i][j] =arr[i][j]+ max(dp[i][j+1],dp[i+1][j+1]);
            }   
            else if(i == n-1)
            {
                dp[i][j] = arr[i][j]+max(dp[i][j+1],dp[i-1][j+1]);
            }
            else
            {
                dp[i][j] = arr[i][j]+max(dp[i+1][j+1],max(dp[i-1][j+1],dp[i][j+1]));  
            }
        }
    }

    int max = dp[0][0];
    for(int i=1;i<n;i++)
    {
        if(max < dp[i][0])
        {
            max =dp[i][0];
        }
    }
    cout<<max;
}