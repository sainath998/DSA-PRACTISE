#include <bits/stdc++.h>
using namespace std;

int main()
{
    // palindromic partitions
    string s = "abccbc";
    int n = s.length();
    int dp[n ][n ];
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            dp[i][j] = 0;
        }
    }
    for (int g = 0; g < n; g++)
    {
        for (int i = 0, j = g; i < n, j < n; i++,j++)
        {
            if(g ==0)
            {
                dp[i][j] =1;
            }
            else if(g ==1)
            {
                if(s[i] == s[j])
                { 
                    // bb => b,b,bb  -> 3 total
                    dp[i][j] = 3;
                }
                else
                {
                    //bc => b ,c=>2 total
                    dp[i][j] = 2;
                }
            }
            else
            {
                if(s[i]== s[j])
                {
                    // 1+ prefix+suffix (edges are equal so once palindrome) + (connt of palindromes form prifix and sufix)
                    //  aba => a,b, a , aba   
                    dp[i][j] = dp[i][j-1]+dp[i+1][j]+1;
                }
                else
                {
                    // prefix +suffix - middle
                    // abc => ab , bc
                    // => a,b      b,c   =>middle part(b) repeated two time
                    dp[i][j] = dp[i+1][j]+dp[i][j-1] - dp[i+1][j-1];
                }
            }
        }
    }

    cout<<"\nno of palindromes are :  "<<dp[0][n-1];
    return 0;
}