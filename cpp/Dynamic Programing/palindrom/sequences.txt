#include <bits/stdc++.h>
using namespace std;

int main()
{
    string s = "aaad";
    int n = s.length();
    // longest palindromic sequence
    //commented one is for  count no of palindromic subsequences
    int dp[n][n];
    
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            dp[i][j] = 0;
        }
    }
    for (int g = 0; g < n; g++)
    {
        for (int i = 0, j = g; j < n; i++, j++)
        {
            if (g == 0)
            {
                dp[i][j] = 1;
            }
            else if (g == 1)
            {
                if (s[i ] == s[j ])
                {
                    dp[i][j] =2;
                    // dp[i][j] = 3;
                }
                else
                {
                    dp[i][j] = 1;
                    // dp[i][j] = 2;
                }
            }
            else
            {
                if (s[i ] == s[j ])
                {
                    dp[i][j] = dp[i+1][j-1]+2;
                    // dp[i][j] = dp[i + 1][j] + dp[i][j - 1] + 1;
                }
                else
                {

                    dp[i][j] = max(dp[i][j-1],dp[i+1][j]);
                    // dp[i][j] = dp[i+1][j] + dp[i][j - 1] - dp[i + 1][j - 1];
                }
            }
        }
    }

    cout<<"\nthe dp is : \n";
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            cout<<dp[i][j]<<"  ";
        }
        cout<<endl;
    }
    return 0;
}