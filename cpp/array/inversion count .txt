#include <bits/stdc++.h>
using namespace std;
long long int merge(int arr[],int l,int mid,int r)
{
    long long int inv = 0;
    int n1 = mid-l+1;
    int n2 = r -mid;

    int a[n1];
    int b[n2];

    for(int i=0;i<n1;i++)
    {
        a[i] = arr[i+l];
    }
    for(int i=0;i<n2;i++)
    {
        b[i] = arr[mid+1+i];
    }
    
    int i=0;
    int j=0;
    int k=l;

    while (i < n1  && j < n2)
    {
        if(a[i] <= b[j])
        {
            arr[k] = a[i];
            k++;i++;
        }
        else
        {
            inv = inv + n1-i;
            arr[k] = b[j];
            j++;k++;
        }
    }

    while(i <n1)
    {
        arr[k] = a[i];i++;k++;
    }
    while(j <n2)
    {
        arr[k] = b[j];j++;k++;
    }

    return inv;
}

long long int mergeSort(int arr[],int l,int r)
{
    long long inv = 0;
    if (l < r)
    {
        int mid = (l + r) / 2;
        inv += mergeSort(arr, l, mid);
        inv += mergeSort(arr, mid + 1, r);
        inv += merge(arr, l, mid, r);
    }
    return inv;
}

int main()
{
    int arr[] = {468, 335, 1, 170, 225, 479, 359, 463, 465, 206, 146, 282, 328, 462, 492, 496, 443, 328, 437, 392, 105, 403, 154, 293, 383, 422, 217, 219, 396, 448, 227, 272, 39, 370, 413, 168, 300, 36, 395, 204, 312, 323};

    int n = sizeof(arr) / sizeof(int);
    cout<< mergeSort(arr,0, n-1);
    return 0;
}