#include<bits/stdc++.h>
using namespace std;

int main()
{
    // o(n^2) time and o(n) space     below o(n^2) time and o(1) space
    int arr[] = {4,2,1,6,7,8};
    int sum =17;
    int n = sizeof(arr)/sizeof(int);
    set<int> nms;
    for(int i=0;i<n;i++)
    {
        nms.insert(arr[i]);
    }
    for(int i=0;i<n;i++)
    {
        int currsum = sum-arr[i];
        nms.erase(arr[i]);
        for(int j=i+1;j<n;j++)
        {
            int p = arr[j];
            nms.erase(arr[j]);
            if(nms.count(currsum-p))
            {
                cout<<"found the sum  :) ";
                return 0;
            }
            nms.insert(arr[j]);
        }
        nms.insert(arr[i]);
    }

    cout<<"not found";
    return 0;
}


/*
#include<bits/stdc++.h>
using namespace std;

int main()
{
    int arr[] = {4,2,1,6,7,8};
    int n = sizeof(arr)/sizeof(int);
    int sum =17;
    bool flag = false;
    sort(arr,arr+n);
    for(int i=0;i<n;i++)
    {
      int value =i;
      int l =i+1,r=n-1;
      while (l < r)
      {
        if(arr[l]+arr[r]+value ==sum)
        {
          flag = true;
          break;
        }
        else if(arr[l]+arr[r]+value < sum)
        {
          l++;
        }
        else
        {
          r--;
        }
      }
      if(flag)
      {
        break;
      }
    }
    if(flag == true)
    {
      cout<<"found";
    }
    else{
      cout<<"not found";
    }
    return 0;
}
*/