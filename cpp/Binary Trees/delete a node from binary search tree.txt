/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:    
    
    int max(TreeNode *root)
    {
        if(root == NULL)
        {
            return 0;
        }
        else if(root->right == NULL)
        {
            return root->val;
        }
        else
        {
            while(root->right != NULL)
            {
                root = root->right;
            }
        }
        return root->val;
    }
    TreeNode* deleteNode(TreeNode* node, int data) {  
        
        if(node == NULL)
        {
            return NULL;
        }
        if(data > node->val)
        {
            node->right = deleteNode(node->right,data);
        }
        else if(data < node->val)
        {
            node->left = deleteNode(node->left,data);
        }
        else
        {
            if(node->left != NULL && node->right != NULL){
                int lmax = max(node->left);
                node->val = lmax;
                node->left = deleteNode(node->left,lmax);
                
            }
            else if(node->left != NULL)
            {
                return node->left;
            }
            else if(node->right != NULL)
            {
                return node->right;
            }
            else
            {
                return NULL;
            }
        }
        return node;
    }
};