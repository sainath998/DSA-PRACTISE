#include<bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    node *left,*right;
};

node* newnode(int data)
{
    node *temp;
    temp =  new node;
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}

map<int,int> m;

// void inorder(node*root)
// {
//     if(root == NULL)
//     {
//         return ;
//     }
//     inorder(root->left);
//     root->data = idx+1;
//     idx++;
//     cout<<root->data;
//     inorder(root->right);
// }

int arr[1000];
int idx = 0;
int n = 0;

void inorder(node *root)
{
    if(root  == NULL)
    {
        return ;
    }
    inorder(root->left);
    arr[idx]= root->data ;
    idx++;
    n++;
    inorder(root->right);
}

void bst(node *root)
{
    if(root== NULL)
    {
        return ;
    }
    bst(root->left);
    root->data = arr[idx];idx++;
    bst(root->right);
}

void print(node*root)
{
    if(root== NULL)
    {
        return ;
    }
    print(root->left);
    cout<<root->data<<"  ";
    print(root->right);
}

int main()
{
    node *root;
    root = newnode(2);
    root->left = newnode(3);
    root->right = newnode(4);
    root->left->left = newnode(5);
    root->left->right = newnode(6);
    root->right->left = newnode(7);
    root->right->right = newnode(8);

    // binary tree to bst 
    inorder(root);
    idx = 0;
    // cout<<"\nthe array is  :  ";
    // for(int i = 0;i<n;i++)
    // {
    //     cout<<arr[i]<<" ";
    // }
    sort(arr,arr+n);
    bst(root);
    print(root);
}