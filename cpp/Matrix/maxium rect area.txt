#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<vector<int>> brr = {{0, 1, 1, 0},
                               {1, 1, 1, 1},
                               {1, 1, 1, 1},
                               {1, 1, 0, 0}};

    int m = brr.size();
    int n = brr[0].size();

    vector<vector<int>> temp(m, vector<int>(n, 0));
    for (int i = 0; i < m; i++)
    {
        for (int j = 0; j < n; j++)
        {
            temp[i][j] = brr[i][j];
        }
    }
    int i = 0;
    int ans = 0;

    while (i < n)
    {
        int cnt = 0;
        if (temp[0][i] != 0)
        {
            cnt++;
        }
        i++;
        ans = max(ans, cnt);
    }

    for (int i = 1; i < m; i++)
    {
        int arr[n];
        for (int j = 0; j < n; j++)
        {
            if (temp[i][j] != 0)
            {
                temp[i][j] = temp[i][j] + temp[i - 1][j];
            }
            arr[j] = temp[i][j];
        }

        vector<int> nse(n, n);
        vector<int> pse(n, -1);
        stack<int> st;
        nse[n - 1] = n;
        st.push(n - 1);
        for (int j = n - 2; j >= 0; j--)
        {
            while (!st.empty() && arr[j] <= arr[st.top()])
            {
                st.pop();
            }
            if (st.empty())
            {
                nse[j] = n;
            }
            else
            {
                nse[j] = st.top();
            }
            st.push(j);
        }

        stack<int> s;
        s.push(0);
        pse[0] = -1;
        for (int j = 1; j < n; j++)
        {
            while (!s.empty() && arr[j] < arr[s.top()])
            {
                s.pop();
            }
            if (s.empty())
            {
                pse[j] = -1;
            }
            else
            {
                pse[j] = s.top();
            }
            s.push(j);
        }

        vector<int> res(n, 0);

        for (int j = 0; j < n; j++)
        {
            res[j] = nse[j] - pse[j] - 1;
            res[j] = res[j] * arr[j];
            ans = max(ans, res[j]);
        }
    }
    // cout << "\nthe area  is : " << ans;
    return ans;
}