#include <bits/stdc++.h>
using namespace std;

int main()
{
    int arr[4][4] = {
        {0, 1, 1, 0},
        {1, 1, 1, 1},
        {1, 1, 1, 1},
        {1, 1, 0, 0}};
    int n = 4;
    int m = 4;
    int result = 0;
    for (int i = 1; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (arr[i][j] != 0)
            {
                arr[i][j] = arr[i][j] + arr[i - 1][j];
            }
        }
    }

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            int hight[n];
            for (int k = 0; k < n; k++)
            {
                hight[k] = arr[i][k];
            }
            stack<int> st;
            int rb[n];
            rb[n - 1] = n;
            st.push(n - 1);
            for (int k = n - 2; k >= 0; k--)
            {
                while (!st.empty() && hight[k] <= hight[st.top()])
                {
                    st.pop();
                }
                if (st.empty())
                {
                    rb[k] = n;
                }
                else
                {
                    rb[k] = st.top();
                }
                st.push(k);
            }
            int lb[n];
            stack<int> t;
            t.push(0);
            for (int k = 1; k < n; k++)
            {
                while (!t.empty() && hight[k] <= hight[t.top()])
                {
                    t.pop();
                }
                if (t.empty())
                {
                    lb[k] = -1;
                }
                else
                {
                    lb[k] = t.top();
                }
                t.push(k);
            }
            for (int k = 0; k < n; k++)
            {
                int width = rb[k] - lb[k] - 1;
                int area = hight[k] * width;
                result = max(result, area);
            }
        }
    }
    cout << "\nthe max area of the rectangle is   :  " << result;
    return 0;
}