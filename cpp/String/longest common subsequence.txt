#include <bits/stdc++.h>
using namespace std;

int main()
{
    // longest common subsequence
    string s1, s2;
    s1= "abc",s2="def";
    int l = s1.length(),m=s2.length();
    int dp[l + 1][m + 1];
    for(int i=0;i<=l;i++)
    {
        for(int j=0;j<=m;j++)
        {
            dp[i][j] =0;
        }
    }
    for (int i = 0; i <=l; i++)
    {
        for (int j = 0; j <= m; j++)
        {
            if (i == 0 || j == 0)
            {
                dp[i][j] = 0;
            }
            else if (s1[i-1] == s2[j-1])
            {
                dp[i][j] =  1 + dp[i - 1][j - 1];
            }
            else
            {
                dp[i][j] = max(dp[i - 1][j],dp[i][j - 1]);
            }
        }
    }
    for(int i=0;i<=l;i++)
    {
        for(int j=0;j<=m;j++)
        {
            cout<<dp[i][j]<<"  ";
        }
        cout<<endl;
    }
    return  0;
}