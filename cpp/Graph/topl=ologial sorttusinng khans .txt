#include <bits/stdc++.h>
using namespace std;


bool canFinish(int numCourses, vector<vector<int>> &prerequisites)
{
    vector<int> adj[numCourses];
    
    adj[2].push_back(1);
    adj[3].push_back(0);
    adj[3].push_back(2);
    adj[4].push_back(0);
    adj[4].push_back(1);
    adj[5].push_back(0);
    adj[5].push_back(3);
    vector<int> indegree(numCourses);

    for(int i=0;i<numCourses;i++)
    {
        for(auto j : adj[i])
        {
            indegree[j]++;
        }
    }

    int count =0;
    
    queue<int> q;
    for(int i=0;i<numCourses;i++)
    {
        if(indegree[i] == 0)
        {
            q.push(i);
        }
    }
    string ans = "";
    while (!q.empty())
    {
        count++;
        int temp = q.front();
        q.pop();
        ans = ans+ to_string(temp);
        for(auto i : adj[temp])
        {
            indegree[i]--;
            if(indegree[i] == 0)
            {
                q.push(i);
            }
        }
    }

    if(count != numCourses)   
    {
        cout<<"\nnot possible";
    }
    cout<<ans;
    return 0;
}


int main()
{
    int n = 6;

    vector<vector<int>> adj(n);
    adj[2].push_back(1);
    adj[3].push_back(0);
    adj[3].push_back(2);
    adj[4].push_back(0);
    adj[4].push_back(1);
    adj[5].push_back(0);
    adj[5].push_back(3);

    canFinish(n,adj);
    
}