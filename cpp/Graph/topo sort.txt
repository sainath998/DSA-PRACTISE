class Solution
{
public:
	void dfs(vector<int> adj[], int v, vector<bool> &visited, stack<int> &s)
	{
		visited[v] = true;
		for (auto node : adj[v])
		{
			if (!visited[node])
			{
				dfs(adj, node, visited, s);
			}
		}
		s.push(v);
	}

	vector<int> topoSort(int v, vector<int> adj[])
	{
		vector<bool> visited(v, false);

		stack<int> s;

		for (int i = 0; i < v; i++)
		{
			if (!visited[i])
			{
				dfs(adj, i, visited, s);
			}
		}
		vector<int> ans;
		while (!s.empty())
		{
			ans.push_back(s.top());
			s.pop();
		}
		return ans;
	}
};