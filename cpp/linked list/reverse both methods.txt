#include <bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    node *next;
};


// using recursion

struct node *head;

void reverse(struct node *root)
{
    if(root->next == NULL)
    {
        head = root;
        return ;
    }
    reverse(root->next);
    root->next->next = root;
    root->next->next->next = NULL;

}



node *newnode(int data)
{
    node *temp = new node;
    temp->data = data;
    temp->next = NULL;
    return temp;
};

// using pointers 
// struct node *reverse(struct node *root)
// {
//     struct node *prev, *curr, *next;
//     // next = (struct node * )malloc(sizeof(struct node));
//     prev = NULL;
//     curr = root;
//     while (curr != NULL)
//     {
//         next = curr->next;
//         curr->next = prev;
//         prev = curr;
//         curr = next;
//     }
//     // struct node *temp;
//     // while (temp != NULL)
//     // {
//     //     cout<<temp->data<<"  ";
//     //     temp = temp->next;
//     // }

//     return prev;
// }



int main()
{
    node *root;
    root = newnode(1);
    root->next = newnode(2);
    root->next->next = newnode(3);
    root->next->next->next = newnode(4);
    root->next->next->next->next = newnode(5);
    root->next->next->next->next->next = NULL;
    reverse(root);

    struct node *temp;
    temp = head;
    while (temp != NULL)
    {
        cout << temp->data << "  ";
        temp = temp->next;
    }

    return 0;
}